Juego de damas posta en python -> https://github.com/dcubero/damas-python
Juego de damas chinas con inteligencia como ejemplo en ruby -> https://github.com/khiav223577/ChineseCheckersBot

INTELIGENCIA
evaluar_tablero(tablero) -> real
Cómo evalúo? 
    V: B -> real
    V(b) ganador = 100
    V(b) perdedor = -100
    V(b) empate = 0
    V'(b) = w0 + w1 * promedio_distancia_negras + w2 * promedio_distancia_rojas
            + w3 * cantidad_de_negras_en_base_contraria + w4 * cantidad_de_rojas_en_base_contraria
            + w5 * promedio_distancia_negras_fuera_de_la_base + w6 * promedio_distancia_rojas_fuera_de_la_base

SI LUEGO DE MI JUGADA QUEDA EL TABLERO:
Lista de posibles resultados al mover -> DEFINIR

FALTA VER COMO SE HACE O REPRESENTA
    tablero
    jugadores
    jugadas
    movimientos posibles
    tableros ganadores/perdedores

GAME
game {
    # inicialización
	board: matriz de enteros?
	player1, player2: Player
	turno = player1
    
    # loop "infinito" hasta que alguien gane
    while !nadie_gano
        if (turno = PLAYER_ONE) {
            pos = player_one.play(board)
        } else{
        ...
        }
        insertar_movimiento_en_tablero(pos, turno)
        cambiar_turno
    end
    quien_gano? => Imprimir GANASTE o PERDISTE
}

play {
    for i=1 to todas_posibles_jugadas
        evaluar_tablero 
    end
    return la_mejor -> tener en cuenta que se debe saber que ficha y a que posición
}




INFORME
Primero pensamos en como representar el juego, incluyendo el tablero, los jugadores, las jugadas, etc. Tambien el flujo del programa.
Luego elegimos los criterios para evaluar que tan bueno es un tablero. 
Luego contar como entrenamos a los jugadores, funciones, etc.
Resultados.



POR HACER
    - Informe
    - Ver si los pesos se están calculando bien
    - Ver si los valores del tablero se están calculando bien 
        - Funciones de distancia dejan dudas
    - Solo cargar e imprimir pesos para el jugador 1
    - Los pesos se van al carajo -> MAL
    - Cambio de valor maximo/minimo lo rompe
    - Jugador random -> Entrenarlo contra este

RESULTADOS:
    - Contra el random siempre gana
        - Deja una ficha en la base a veces y tranca
    - Contra el AI 
        - Se entrenó 500 veces
        - Se jugó sin recalcular los pesos
        - Deja una ficha en la base a veces y tranca ??????????????
        - Learning rate 0.1 la mejor
